version: "3"
services:
  pages-api:
    container_name: pages-api
    ####################################################################
    # Builds the current code in your repo
    ####################################################################
    build: .
    environment:
      - ENVIRONMENT=docker
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
    ####################################################################
    # Maps port 80 from the container to 8080 on your host, this allows
    # you to access your service via http://localhost:8080.  While we've
    # provided this example here, it's intended as a tool for debugging
    # purposes and not as a permanent bypass for the edge-gateway.
    ####################################################################
    ports:
      - "8080:80"
      - "9229:9229"

    command: yarn watch ./src/index.ts
    ####################################################################
    # Maps your src directory to the /srv/app/src directory in the
    # running docker container.  In theory this would allow for you
    # to use a live-reload solution
    ####################################################################
    volumes:
      - ./:/srv/app
  pages-api-worker:
    container_name: pages-api-worker
    ####################################################################
    # Builds the current code in your repo
    ####################################################################
    build:
      context: .
      dockerfile: Dockerfile-pages-api-worker
    environment:
      - ENVIRONMENT=docker
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - PAGES_WORKER=true
    ports:
      - "8081:81"

    command: yarn watch ./src/worker.ts
    volumes:
      - ./:/srv/app

########################################################################
# Instructs docker compose to use the invisionlocal_default network
# as the default network for all services in this compose environment
########################################################################
networks:
  default:
    external:
      name: invisionlocal_default
